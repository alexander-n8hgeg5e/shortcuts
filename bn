#!/usr/bin/python3
from sys import argv
from subprocess import Popen,DEVNULL,PIPE,check_call,call
from signal import SIGSTOP,SIGCONT
from os import getpid,nice,getuid
from pylib.du import ptb

def cgroup2_find_path():
    shell_code=". /etc/rc.conf  && . /lib/rc/sh/rc-cgroup.sh \n cgroup2_find_path"
    p=Popen(["bash"],stdin=PIPE,stdout=PIPE)
    outp=p.communicate(input=shell_code.encode())
    return outp[0].decode()
    

def setup():
    try:
        pid = getpid()
        cgpcsf=f"{cgroup2_find_path()}/cg_bg/cgroup.procs"

        # TODO: add code somewhere else and remove next 2 line
        # calling subprocesses is much slower than opening files
        if getuid() == 1000:
            call(['sudo','chmod','og+rw',cgpcsf])

        # add to cgroup
        with open(cgpcsf,'wb') as f:
            f.write(str(pid).encode(encoding='ascii'))
        nice(40)
        check_call([ 'ionice' , '-c3', '-p', str(pid) ])
    except Exception as e:
        ptb(e)
        raise


# start
p0 = Popen(argv[1:],preexec_fn=setup)
from sys import stderr
print(p0.pid,file=stderr)
p0.wait()
exit(p0.returncode)
