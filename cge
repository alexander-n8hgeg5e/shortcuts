#!/bin/bash
declare -A args


args["-h"]=0

#echo "${!args[@]}"

# gen usage help
args_string=""
for thing in "${!args[@]}" ; do
    args_string="$args_string [${thing}]"
done
usage_help="usage:
${args_string[@]} |cgroup cmd"
usage_help="usage: $0 CGROUP CMD\n
cgroup is one of the cgroups below the path returned by cgroup2_find_path"

last=0
count=0

for i in "${@}"; do
    count=$(( $count + 1 ))
    for arg in "${!args[@]}"; do
        if [[ "${i}" = "${arg}" ]];then
            args[$arg]=1
            last=$count
        fi
    done
done

if [[ "${args["-h"]}" -eq 1 ]] ; then
    echo -e $usage_help
    exit
fi
if [[ $# -ge 2 ]] ; then
    cgroup=$1
    cmdline="${@:2}"
fi


##################
## setup cgroup ##
##################
proc_path=$(python -c '
from pylib.cgroup_utils import cgroup2_find_path
print(cgroup2_find_path()+"/'"${cgroup}"'/cgroup.procs")
')
if [[ -e $proc_path ]];then
    #echo setting cgroup to $cgroup 1>&2
    cat /proc/self/stat | cut -d' ' -f4 | sudo dd of="${proc_path}" status=none
    #echo -e "${proc_path}:\n$(cat "${proc_path}")"
else
    echo error wrong cgroup 1>&2
    exit 1
fi

#########
## run ##
#########

exec ${cmdline}
