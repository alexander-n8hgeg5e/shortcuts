#!/usr/bin/python3

field_desc= [
            "major",
            "minor",
            "name",
            "# of reads completed",
            "# of reads merged",
            "# of sectors read",
            "# of milliseconds spent reading",
            "# of writes completed",
            "# of writes merged",
            "# of sectors written",
            "# of milliseconds spent writing",
            "# of I/Os currently in progress",
            "# of milliseconds or jiffies spent doing I/Os",
            "weighted # of milliseconds spent doing I/Os",
            "# of discards completed",
            "# of discards merged",
            "# of sectors discarded",
            "# of milliseconds spent discarding",
            ]
from os.path import sep as psep
from pprint import pprint

with open("/proc/diskstats") as f:
    lines=f.read().strip().split("\n")

datadict={}
name2_major_minor={}
for line in lines:
    fields=line.split()
    major=fields[0]
    minor=fields[1]
    name=fields[2]
    if not major in datadict.keys():
        datadict.update({major:{}})
    if not minor in datadict[major].keys():
        datadict[major].update({minor:{}})
    names=field_desc
    values=fields
    d=dict([(i,j) for i,j in zip(names,values)])
    name2_major_minor.update({name:(major,minor)})
    datadict[major][minor].update(d)

from sys import argv,exit

try:
    major,minor = name2_major_minor[argv[1]]
except KeyError:
    print("KeyError, available keys:")
    for k in name2_major_minor.keys():
        print(k)
    exit(1)
maxkeylen=0
printstuff=[]
for i in [ int(j) for j in argv[2:]]:
    try:
        k=field_desc[i]
        maxkeylen=max(len(k),maxkeylen)
        v=datadict[major][minor][k]
    except IndexError:
        print("IndexError, available indices:")
        for i in range(len(field_desc)):
            print("{} : {}".format(i,field_desc[i]))
        exit(1)
    printstuff.append((k,v))
for k,v in printstuff:
    print(("{:"+str(maxkeylen)+"} = {}").format(k,v))
