#!/usr/bin/env python3
#elpau!! --fetchonly \
#(\
GET_LOG_CMD = [ 'ssh', 'syslogger', 'cat', '/var/log/syslog*' ]
#|grep 'Fetch failed for'\
#|sed -E 's/^.*Fetch failed for [\']([^\']+)[\'].*$/=\\1/'\
#)
from subprocess import check_output
from re import sub
from os import environ as env
env['ACCEPT_KEYWORDS']='**'
counter=0
BREAKCOUNT=3
atoms=[]
data = check_output(GET_LOG_CMD)
datalines = data.splitlines()
for line in datalines:
    line=line.decode(errors="replace")
    if line.find("Fetch failed for ") != -1:
        pkgname = sub('^.*Fetch failed for [\']([^\']+)[\'].*$','=\\1',line.strip())
        #print(f"found: \"{pkgname}\"")
        atoms.append(pkgname)

from pylib.list_utils import uniq
atoms=uniq(atoms)
print(f"Found {len(atoms)} atoms ...",end="")

done=[]
with open("/tmp/fetch_failed_fetched_list","rt") as f:
    done_=f.read().strip().split("\n")
    for d in done_:
        dd=d.strip()
        if len(dd) > 0:
            done.append(dd)


done=uniq(done)

#print(done)
print(f" and any {len(done)} atoms had been already fetched.")


idxes=[]
with open("/tmp/fetch_failed_fetched_list","at") as f:
    start= f.tell() == 0 
    from subprocess import check_call,CalledProcessError
    for atom in atoms:
        if not atom in done:
            try: 
                check_call(['emerge','--nodeps','--verbose','--fetchonly',atom],env=env)
                if not atom in done:
                    if start:
                        f.write(atom)
                        start=False
                    else:
                        f.write("\n"+atom)
                    f.flush()
            except CalledProcessError as e:
                pass
