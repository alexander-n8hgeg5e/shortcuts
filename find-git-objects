#!/usr/bin/env python3

from argparse import ArgumentParser
from pylib.git_utils import looks_git,are_gitdirs_inside,find_git_dirs,get_git_objects_pathes,find_git_pack_pathes
from os.path import sep as psep

ap=ArgumentParser("""Find the git objects.
        Finds only the loose objects unless option --packs is specified.""")
ap.add_argument(dest="pathes",default=".",nargs="+")
ap.add_argument("-v","--verbose",action="store_true")
ap.add_argument("-p","--packs",action="store_true",help="find packs")
args=ap.parse_args()
if args.verbose:
    from sys import stderr
pathes = args.pathes
prob_git_dirs=[]
for p in pathes:
    add_prob_git_dirs=find_git_dirs(p,verbose=args.verbose,msg_out=stderr)
    # add no duplicates
    for d in add_prob_git_dirs:
        if not d in prob_git_dirs:
            prob_git_dirs.append(d)

if not args.packs:
    for gd in prob_git_dirs:
        for p in get_git_objects_pathes(gd):
            print(p)
else:
    for gd in prob_git_dirs:
        gpp=find_git_pack_pathes(gd)
        if args.verbose and len(gpp) > 0:
            headline="GIT DIR = {}".format(gd)
            print(headline,file=stderr)
            print(("="*len(headline))+"\n",file=stderr)
        for p in gpp:
            print(p)
