#!/usr/bin/env python3

from argparse import ArgumentParser

ap = ArgumentParser()
ap.add_argument("-n","--count", default=1, help="how many latest files to show",type=int)
ap.add_argument( dest='pathes', nargs='+' )
args = ap.parse_args()
from subprocess import Popen,PIPE
from os import set_blocking

cmd0 = [ 'find' ] + args.pathes + [ '-type', 'f', '-printf', '%Ts %p\n' ]
cmd1 = ['sort', '-k1n']

p0=Popen(cmd0,stdout=PIPE)
p1=Popen(cmd1,stdout=PIPE,stdin=PIPE)

set_blocking(p0.stdout.fileno(),False)
set_blocking(p1.stdin.fileno(),False)
set_blocking(p1.stdout.fileno(),False)

out=b''
count=0
while p0.poll() is None:
    d0 = p0.stdout.read(1)
    if not d0 is None:
        #print(d0.decode(),end='')
        p1.stdin.write(d0)
    d1 = p1.stdout.read(1)
    if not d1 is None:
        out += d1
print('exit code p0 =',p0.poll())
p1.stdin.close()

while p1.poll() is None:
    d1 = p1.stdout.read(1)
    if not d1 is None:
        out += d1

d1 = p1.stdout.read()
if not d1 is None:
    out += d1

lines=[line.strip() for line in  out.decode().split("\n")]
_lines=[]
for line in lines:
    s=line.split(' ')
    if len(s) == 2:
        _lines.append(s[1])
print('\n'.join(_lines[- args.count :]))

